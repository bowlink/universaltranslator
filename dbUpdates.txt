
/** 
CM - 09/29/2020
The below changes must be made once UT Production has been updated with the latest
code from EAH 
**/
CREATE TABLE `configurationupdatelogs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `configId` int(11) NOT NULL,
  `userId` int(11) NOT NULL,
  `dateCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updateMade` mediumtext,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`id`),
  KEY `configid` (`configId`)
) ENGINE=InnoDB AUTO_INCREMENT=127 DEFAULT CHARSET=latin1;


ALTER TABLE `universaltranslator`.`configurationupdatelogs` 
CHANGE COLUMN `updateMade` `updateMade` MEDIUMTEXT NULL DEFAULT NULL ;

ALTER TABLE `universaltranslator`.`crosswalks` 
ADD COLUMN `lastUpdated` DATETIME NULL DEFAULT CURRENT_TIMESTAMP AFTER `orgId`;

update universaltranslator.crosswalks set lastupdated = null;

ALTER TABLE `universaltranslator`.`configurationdatatranslations` 
ADD COLUMN `dateAdded` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP AFTER `defaultValue`;

ALTER TABLE `universaltranslator`.`batchdownloadauditerrors` 
ADD COLUMN `required` BIT(1) NULL Default '' AFTER `rownumber`,
ADD COLUMN `translatedReportField1Data` VARCHAR(45) NOT NULL Default '' AFTER `required`;

ALTER TABLE `universaltranslator`.`batchuploadauditerrors` 
ADD COLUMN `required` BIT(1) NULL Default '' AFTER `rownumber`,
ADD COLUMN `translatedReportField1Data` VARCHAR(45) NOT NULL Default '' AFTER `required`;

ALTER TABLE `universaltranslator`.`batchdownloaddroppedvalues` 
DROP COLUMN `entity3Id`,
ADD COLUMN `translatedReportField1Data` VARCHAR(45) NULL DEFAULT NULL AFTER `reportField4Data`;

ALTER TABLE `universaltranslator`.`batchuploaddroppedvalues` 
DROP COLUMN `entity3Id`,
ADD COLUMN `translatedReportField1Data` VARCHAR(45) NULL DEFAULT NULL AFTER `reportField4Data`;


ALTER TABLE `universaltranslator`.`batchuploaddroppedvalues` 
ADD COLUMN `fromOutboundConfig` BIT(1) NULL DEFAULT False AFTER `translatedReportField1Data`;


/** 
CM - 10/215/202
eReferral Configuration updates for replaced macros 
**/
UPDATE `universaltranslator`.`configurationdatatranslations` SET `macroId`='68', `fieldA`='',`constant1`='', `constant2`='-' WHERE `id`='2105';
UPDATE `universaltranslator`.`configurationdatatranslations` SET `macroId`='68', `fieldA`='',`constant1`='', `constant2`='-' WHERE `id`='2106';
UPDATE `universaltranslator`.`configurationdatatranslations` SET `macroId`='68', `fieldA`='',`constant1`='', `constant2`='-' WHERE `id`='2107';
UPDATE `universaltranslator`.`configurationdatatranslations` SET `macroId`='68', `fieldA`='',`constant1`='', `constant2`='-' WHERE `id`='3642';
UPDATE `universaltranslator`.`configurationdatatranslations` SET `macroId`='68', `fieldA`='',`constant1`='', `constant2`='-' WHERE `id`='3643';
UPDATE `universaltranslator`.`configurationdatatranslations` SET `macroId`='68', `fieldA`='',`constant1`='', `constant2`='-' WHERE `id`='3644';
UPDATE `universaltranslator`.`configurationdatatranslations` SET `macroId`='112', `fieldA`='', `constant1`='%Y%m%d', `constant2`='%Y-%m-%d' WHERE `id`='350';
UPDATE `universaltranslator`.`configurationdatatranslations` SET `macroId`='112', `fieldA`='', `constant1`='%Y%m%d', `constant2`='%Y-%m-%d' WHERE `id`='351';

DELIMITER $$
CREATE DEFINER=`root`@`localhost` FUNCTION `replace_ci`( str TEXT,needle CHAR(255),str_rep CHAR(255)) RETURNS text CHARSET latin1
    DETERMINISTIC
BEGIN
        DECLARE return_str TEXT DEFAULT '';
        DECLARE lower_str TEXT;
        DECLARE lower_needle TEXT;
        DECLARE pos INT DEFAULT 1;
        DECLARE old_pos INT DEFAULT 1;

        SELECT lower(str) INTO lower_str;
        SELECT lower(needle) INTO lower_needle;
        SELECT locate(lower_needle, lower_str, pos) INTO pos;
        WHILE pos > 0 DO
            SELECT concat(return_str, substr(str, old_pos, pos-old_pos), str_rep) INTO return_str;
            SELECT pos + char_length(needle) INTO pos;
            SELECT pos INTO old_pos;
            SELECT locate(lower_needle, lower_str, pos) INTO pos;
        END WHILE;
        SELECT concat(return_str, substr(str, old_pos, char_length(str))) INTO return_str;
        RETURN return_str;
END$$
DELIMITER ;
