CREATE TABLE `batchdownloadauditerrors` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `batchDownloadId` int(11) NOT NULL,
  `configId` int(11) NOT NULL,
  `fieldNo` int(11) NOT NULL,
  `fieldName` varchar(45) DEFAULT NULL,
  `errorId` int(11) NOT NULL,
  `errorDetails` varchar(200) DEFAULT NULL COMMENT 'This field is used to update cw name, validation type name, macro name',
  `errorData` text,
  `reportField1Data` varchar(45) DEFAULT NULL,
  `reportField2Data` varchar(45) DEFAULT NULL,
  `reportField3Data` varchar(45) DEFAULT NULL,
  `reportField4Data` varchar(45) DEFAULT NULL,
  `rownumber` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `downloadauditKeyError_idx` (`batchDownloadId`),
  KEY `errorId` (`errorId`),
  CONSTRAINT `downloadauditErrorKey_FK` FOREIGN KEY (`batchDownloadId`) REFERENCES `batchdownloads` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE `batchuploadactivity` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `activity` varchar(255) DEFAULT NULL,
  `batchUploadId` int(11) DEFAULT NULL,
  `dateCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `batchId` (`batchUploadId`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


CREATE TABLE `batchdownloadactivity` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `activity` varchar(255) DEFAULT NULL,
  `batchDownloadId` int(11) DEFAULT NULL,
  `dateCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `batchId` (`batchDownloadId`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

USE `universaltranslator`;
DROP procedure IF EXISTS `populateOutboundAuditReport`;

DELIMITER $$
USE `universaltranslator`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `populateOutboundAuditReport`(in inConfigId int, in inBatchId int, in inBatchUpoadId int, in inBatchUploadConfigId int)
proc_main:begin

-- delete FROM sqlstmts;

INSERT INTO sqlstmts (sqlstmt) values (inConfigId);
INSERT INTO sqlstmts (sqlstmt) values (inBatchId);
INSERT INTO sqlstmts (sqlstmt) values (inBatchUpoadId);

SET @stmt = CONCAT('delete from transactionoutdetailauditerrors_',inBatchId,' where configId = ',inConfigId);

-- INSERT INTO sqlstmts (sqlstmt) values (@stmt);

PREPARE stmt from @stmt;
EXECUTE stmt;

SELECT concat('F',rptField1),concat('F',rptField2),concat('F',rptField3),concat('F',rptField4) INTO @rptField1, @rptField2,@rptField3,@rptField4 
FROM configurationmessagespecs where configId = inConfigId LIMIT 1;

SELECT populateInboundAuditReport INTO @populateInboundAuditReport
FROM configurationtransportdetails where configId = inConfigId LIMIT 1;

-- INSERT INTO sqlstmts (sqlstmt) values (@populateInboundAuditReport);

if(@rptField1 = 'F0') then 
	set @rptField1 = "F1";
end if;

if(@rptField2 = 'F0') then 
	set @rptField2 = "F2";
end if;

if(@rptField3 = 'F0') then 
	set @rptField3 = "F3";
end if;

if(@rptField4 = 'F0') then 
	set @rptField4 = "F4";
end if;

SET @stmt = CONCAT('insert into transactionoutdetailauditerrors_',inBatchId,' 
(batchDownloadId, configId, transactionOutRecordsId, fieldNo, errorId, transactionOutErrorId,errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data)
select a.batchDownloadId,a.configId,a.transactionOutRecordsId,a.fieldno,a.errorId,a.id,a.fieldValue,b.',@rptField1,',b.',@rptField2,',b.',@rptField3,',b.',@rptField4,'
from transactionouterrors_',inBatchId,' a inner join 
transactionoutrecords_',inBatchId,' b on a.transactionOutRecordsId = b.id
where a.configId = ',inConfigId);

-- INSERT INTO sqlstmts (sqlstmt) values (@stmt);

PREPARE stmt from @stmt;
EXECUTE stmt;

SET @stmt = CONCAT('UPDATE transactionoutdetailauditerrors_',inBatchId,' JOIN (select fieldNo matchid, macro_Name as label 
from macro_names, transactionouterrors_',inBatchId,' where macro_Names.id = transactionouterrors_',inBatchId,'.macroId) tbl_concat
     ON transactionoutdetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionoutdetailauditerrors_',inBatchId,'.errorDetails = tbl_concat.label WHERE errorId = 4');

-- INSERT INTO sqlstmts (sqlstmt) values (@stmt);

PREPARE stmt from @stmt;
EXECUTE stmt;

SET @stmt = CONCAT('UPDATE transactionoutdetailauditerrors_',inBatchId,'
  JOIN (select fieldNo matchid, name as label 
from crosswalks, transactionouterrors_',inBatchId,' where crosswalks.id = transactionouterrors_',inBatchId,'.cwId) tbl_concat
     ON transactionoutdetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionoutdetailauditerrors_',inBatchId,'.errorDetails = tbl_concat.label WHERE errorId = 3');

-- INSERT INTO sqlstmts (sqlstmt) values (@stmt);

PREPARE stmt from @stmt;
EXECUTE stmt;

SET @stmt = CONCAT('UPDATE transactionoutdetailauditerrors_',inBatchId,'
  JOIN (select fieldNo matchid, validationType as label 
from ref_validationtypes, transactionouterrors_',inBatchId,' where ref_validationtypes.id = transactionouterrors_',inBatchId,'.validationTypeId) tbl_concat
     ON transactionoutdetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionoutdetailauditerrors_',inBatchId,'.errorDetails = tbl_concat.label WHERE errorId = 2');

-- INSERT INTO sqlstmts (sqlstmt) values (@stmt);

PREPARE stmt from @stmt;
EXECUTE stmt;

SET @stmt = CONCAT('UPDATE transactionoutdetailauditerrors_',inBatchId,'
  JOIN (select fieldNo as matchid, fieldDesc as label from configurationformfields where configId = ',inConfigId,') tbl_concat
     ON transactionoutdetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionoutdetailauditerrors_',inBatchId,'.fieldName = tbl_concat.label');

-- INSERT INTO sqlstmts (sqlstmt) values (@stmt);

PREPARE stmt from @stmt;
EXECUTE stmt;

-- Populate the batchUploadauditerrors table
SET @stmt = CONCAT('INSERT INTO batchdownloadauditerrors (batchDownloadId, configId, fieldNo, fieldName, errorId, errorDetails, errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data, rownumber) 
select batchDownloadId, configId, fieldNo, fieldName, errorId, errorDetails, errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data, transactionOutRecordsId 
from transactionoutdetailauditerrors_',inBatchId);

-- INSERT INTO sqlstmts (sqlstmt) values (@stmt);

PREPARE stmt from @stmt;
EXECUTE stmt;

-- If the target configuration needs to update the inbound audit report
if(@populateInboundAuditReport) then

	SET @stmt = CONCAT('INSERT INTO batchuploadauditerrors  (batchUploadId, configId, fieldNo, fieldName, errorId, errorDetails, errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data, rownumber)
    select ',inBatchUpoadId,', ',inBatchUploadConfigId,', b.associatedFieldNo, a.fieldName, a.errorId, a.errorDetails, a.errorData, NULL, NULL, NULL, NULL, a.transactionOutRecordsId 
	from transactionoutdetailauditerrors_',inBatchId, ' a inner join configurationconnectionfieldmappings b on b.sourceConfigId = ',inBatchUploadConfigId,' and b.targetConfigId = ',inConfigId,' and b.fieldNo = a.fieldNo');
    
    -- INSERT INTO sqlstmts (sqlstmt) values (@stmt);

	PREPARE stmt from @stmt;
	EXECUTE stmt;
end if;

select '';

end proc_main$$

DELIMITER ;

