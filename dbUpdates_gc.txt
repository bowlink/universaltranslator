ALTER TABLE `universaltranslatorca`.`batchdownloadauditerrors` 
ADD COLUMN `translatedReportField1Data` VARCHAR(45) NOT NULL Default '' AFTER `required`;

ALTER TABLE `universaltranslatorca`.`batchuploadauditerrors` 
ADD COLUMN `translatedReportField1Data` VARCHAR(45) NOT NULL Default '' AFTER `required`;

USE `universaltranslatorca`;
DROP procedure IF EXISTS `createTempErrorTable`;

USE `universaltranslatorca`;
DROP procedure IF EXISTS `populateOutboundAuditReport`;

DELIMITER $$
USE `universaltranslatorca`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `populateOutboundAuditReport`(in inConfigId int, in inBatchId int, in inBatchUpoadId int, in inBatchUploadConfigId int)
proc_main:begin

SET @stmt = CONCAT('delete from transactionoutdetailauditerrors_',inBatchId,' where configId = ',inConfigId);

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SELECT concat('F',rptField1),concat('F',rptField2),concat('F',rptField3),concat('F',rptField4) INTO @rptField1, @rptField2,@rptField3,@rptField4 
FROM configurationmessagespecs where configId = inConfigId LIMIT 1;

SELECT populateInboundAuditReport INTO @populateInboundAuditReport
FROM configurationtransportdetails where configId = inConfigId LIMIT 1;


if(@rptField1 = 'F0') then 
	set @rptField1 = "F1";
end if;

if(@rptField2 = 'F0') then 
	set @rptField2 = "F2";
end if;

if(@rptField3 = 'F0') then 
	set @rptField3 = "F3";
end if;

if(@rptField4 = 'F0') then 
	set @rptField4 = "F4";
end if;


SET @stmt = CONCAT('insert into transactionoutdetailauditerrors_',inBatchId,' 
(required, batchDownloadId, configId, transactionOutRecordsId, fieldNo, errorId, transactionOutErrorId,errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data)
select a.required, a.batchDownloadId,a.configId,a.transactionOutRecordsId,a.fieldno,a.errorId,a.id,a.fieldValue,b.',@rptField1,',b.',@rptField2,',b.',@rptField3,',b.',@rptField4,'
from transactionouterrors_',inBatchId,' a inner join 
transactionoutrecords_',inBatchId,' b on a.transactionOutRecordsId = b.id
where a.configId = ',inConfigId);

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


SET @stmt = CONCAT("UPDATE transactionouterrors_",inBatchId," JOIN (select distinct id as matchId, macro_Name as label 
from macro_names) tbl_concat
 ON transactionouterrors_",inBatchId,".macroId = tbl_concat.matchid
SET transactionouterrors_",inBatchId,".stackTrace = concat(label, ' - ' , stackTrace) WHERE errorId = 5");


PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


SET @stmt = CONCAT('UPDATE transactionoutdetailauditerrors_',inBatchId,' JOIN (select distinct fieldNo matchid, macro_Name as label 
from macro_names, transactionouterrors_',inBatchId,' where macro_Names.id = transactionouterrors_',inBatchId,'.macroId) tbl_concat
 ON transactionoutdetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionoutdetailauditerrors_',inBatchId,'.errorDetails = tbl_concat.label WHERE errorId = 4');

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @stmt = CONCAT('UPDATE transactionoutdetailauditerrors_',inBatchId,'
 JOIN (select distinct fieldNo matchid, name as label 
from crosswalks, transactionouterrors_',inBatchId,' where crosswalks.id = transactionouterrors_',inBatchId,'.cwId) tbl_concat
 ON transactionoutdetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionoutdetailauditerrors_',inBatchId,'.errorDetails = tbl_concat.label WHERE errorId = 3');

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @stmt = CONCAT('UPDATE transactionoutdetailauditerrors_',inBatchId,'
 JOIN (select distinct fieldNo matchid, validationType as label 
from ref_validationtypes, transactionouterrors_',inBatchId,' where ref_validationtypes.id = transactionouterrors_',inBatchId,'.validationTypeId) tbl_concat
 ON transactionoutdetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionoutdetailauditerrors_',inBatchId,'.errorDetails = tbl_concat.label WHERE errorId = 2');


PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @stmt = CONCAT('UPDATE transactionoutdetailauditerrors_',inBatchId,'
 JOIN (select distinct fieldNo as matchid, fieldDesc as label from configurationformfields where configId = ',inConfigId,') tbl_concat
 ON transactionoutdetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionoutdetailauditerrors_',inBatchId,'.fieldName = tbl_concat.label');

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;



SET @stmt = CONCAT('insert into transactionoutdetailauditerrors_',inBatchId,' 
(required, batchDownloadId, configId, transactionOutRecordsId, fieldNo, errorId, transactionOutErrorId,errorData)
select required, batchDownloadId,configId,0,fieldno,errorId,id,stackTrace
from transactionouterrors_',inBatchId,' 
where errorId = 5 and configId = ',inConfigId);

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


SET @stmt = CONCAT("select group_concat(distinct concat('F', fieldNo)) from transactionoutdetailauditerrors_",inBatchId," 
where batchDownloadId = ",inBatchId," and errorData is null and configId = ",inConfigId," into @fieldNos;
");

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;




if (@fieldNos is not null) then

	begin

 SET @stmt = CONCAT("
 select distinct group_concat(distinct concat('when fieldNo = ', fieldNo , ' then ', concat('F', fieldNo)) separator ' ' ) from transactionoutdetailauditerrors_",inBatchId,"
 where batchDownloadId = ",inBatchId," and errorData is null and configId = ",inConfigId," into @updateStmts;
 ");


 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt;


 if (@updateStmts is not null) then 
 begin

 SET @stmt = CONCAT("
 update transactionoutdetailauditerrors_",inBatchId," tiae join (
 select distinct id, ", @fieldNos," from transactionoutrecords_",inBatchId,") tir
 on tiae.transactionoutRecordsId = tir.id
 set errordata = case ",@updateStmts," end
 where batchDownloadId = ",inBatchId," and errorData is null and configId = ",inConfigId," ;
 ");


 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt;
	end;
 end if;

	end;

end if;

delete from batchdownloadauditerrors where batchdownloadId = inBatchid and configId = inConfigId;


SET @stmt = CONCAT('INSERT INTO batchdownloadauditerrors (batchDownloadId, configId, fieldNo, fieldName, errorId, errorDetails, errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data, rownumber) 
select batchDownloadId, configId, fieldNo, fieldName, errorId, errorDetails, errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data, transactionOutRecordsId 
from transactionoutdetailauditerrors_',inBatchId);

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- update report field
SET @stmt = CONCAT("update batchdownloadauditerrors table1 join (
select ",@rptField1," fielddata, transactionOutRecordsId from transactiontranslatedout_",inBatchId,") table2
on table1.rownumber = table2.transactionOutRecordsId
set translatedReportField1Data = fieldData
where table1.batchdownloadId = ",inBatchId,";");

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;



if (@populateInboundAuditReport) then

 begin


 call createTempErrorTable(inBatchId);

 SET @stmt = CONCAT("
 insert into transactionoutdetailauditerrorsforinbound_",inBatchId," 
 select * from transactionoutdetailauditerrors_",inBatchId,";
 ");

 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt;


 SET @stmt = CONCAT("
 ALTER TABLE transactionoutdetailauditerrorsforinbound_",inBatchId," 
 ADD COLUMN transactionInRecordsId INT NULL AFTER transactionOutErrorId,
 ADD COLUMN inFieldNo INT NULL AFTER transactionInRecordsId;
 ");

 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt; 


 SET @stmt = CONCAT("
 update transactionoutdetailauditerrorsforinbound_",inBatchId," auditTable join (
 select distinct populateErrorFieldNo, mt.* from configurationconnectionfieldmappings join 
 ( select auditId, transactionInRecordsId, fieldno from transactionoutrecords_",inBatchId," tir 
 join ( select id as auditId, transactionoutrecordsId, fieldNo from transactionoutdetailauditerrorsforinbound_",inBatchId,") errorTable 
 on tir.id = errorTable.transactionoutrecordsId) mt on mt.fieldNo = configurationconnectionfieldmappings.fieldNo 
 where sourceConfigId = ",inBatchUploadConfigId,") infoTable
 on infotable.auditid = auditTable.id
 set auditTable.transactionInRecordsId = infoTable.transactionInRecordsId, inFieldNo = populateErrorFieldNo;
 ");

 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt; 



 SET @stmt = CONCAT("
 select group_concat(distinct concat('F', inFieldNo)) from transactionoutdetailauditerrorsforinbound_",inBatchId," where infieldNo != 0 into @inboundFields;
 ");


 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt; 


 if (@inboundFields is not null) then 

 begin

 SET @stmt = CONCAT("
 select group_concat(distinct concat('when infieldNo = ', inFieldNo , ' then ', concat('F', inFieldNo)) separator ' ' ) 
 from transactionoutdetailauditerrorsforinbound_",inBatchId," where infieldNo != 0 into @inUpdateFields;
 ");


 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt; 


 SELECT concat('F',rptField1),concat('F',rptField2),concat('F',rptField3),concat('F',rptField4) INTO @rptInField1, @rptInField2,@rptInField3,@rptInField4 
 FROM configurationmessagespecs where configId = inBatchUploadConfigId LIMIT 1;


 if (@rptInField1 = 'F0') then 
 set @rptInField1 = "F1";
 end if;

 if (@rptInField2 = 'F0') then 
 set @rptInField2 = "F2";
 end if;

 if (@rptInField3 = 'F0') then 
 set @rptInField3 = "F3";
 end if;

 if(@rptInField4 = 'F0') then 
 set @rptInField4 = "F4";
 end if;


 SET @stmt = CONCAT("
 update transactionoutdetailauditerrorsforinbound_",inBatchId," tir join (
 select distinct ",@rptInField1," reportField1Data, ",@rptInField2," reportField2Data, ",@rptInField3," reportField3Data, ",@rptInField4," reportField4Data, 
 transactionInRecordsId, ",@inboundFields," from transactioninrecords_",inBatchUpoadId," tir join 
 (select distinct transactionInRecordsId from transactionoutdetailauditerrorsforinbound_",inBatchId,") auditTable
 on transactionInRecordsId = tir.id) infotable
 on infotable.transactionInRecordsId = tir.transactionInRecordsId
 set errorData = case 
 ",@inUpdateFields,"
 end, 
 tir.reportField1Data = infotable.reportField1Data, tir.reportField2Data = infotable.reportField2Data,
 tir.reportField3Data = infotable.reportField3Data, tir.reportField4Data = infotable.reportField4Data
 ");


 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt; 

 -- SET @stmt = CONCAT("
 -- delete from batchuploadauditerrors where fromOutboundConfig = true and batchUploadId = ",inBatchUpoadId," and configId = ",inBatchUploadConfigId,"
 -- ");

 -- PREPARE stmt from @stmt;
 -- EXECUTE stmt;
 -- DEALLOCATE PREPARE stmt;


 -- SET @stmt = CONCAT("insert into batchuploadauditerrors (batchUploadId, configId, fieldNo, fieldName, errorId, errorDetails, errorData, reportField1Data, 
 -- reportField2Data, reportField3Data, reportField4Data, rownumber, fromOutboundConfig, required)
 -- select ",inBatchUpoadId,", ",inBatchUploadConfigId,", case when inFieldNo is null then 0 else inFieldNo end, fieldName, errorId, errorDetails, errorData, reportField1Data, 
 -- reportField2Data, reportField3Data, reportField4Data, transactionInRecordsId, true, required from 
 -- transactionoutdetailauditerrorsforinbound_",inBatchId, " table1");

 -- PREPARE stmt from @stmt;
 -- EXECUTE stmt;
 -- DEALLOCATE PREPARE stmt; 

 end;
 end if;

 SET @stmt = CONCAT("
 delete from batchuploadauditerrors where fromOutboundConfig = true and batchUploadId = ",inBatchUpoadId," and configId = ",inBatchUploadConfigId,"
 ");

 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt;


 SET @stmt = CONCAT("insert into batchuploadauditerrors (batchUploadId, configId, fieldNo, fieldName, errorId, errorDetails, errorData, reportField1Data, 
 reportField2Data, reportField3Data, reportField4Data, rownumber, fromOutboundConfig, required)
 select ",inBatchUpoadId,", case when inFieldNo is null then configId when inFieldNo = 0 then configId else ",inBatchUploadConfigId," end, case when inFieldNo is null then fieldNo when inFieldNo = 0 then fieldNo else inFieldNo end, fieldName, errorId, errorDetails, errorData, reportField1Data, 
 reportField2Data, reportField3Data, reportField4Data, case when transactionInRecordsId is null then 0 else transactionInRecordsId end, true, required from 
 transactionoutdetailauditerrorsforinbound_",inBatchId, " table1");

 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt; 
 
  -- update translatedReportField1Data
           SET @stmt = CONCAT("update batchuploadauditerrors table1 join (
			select ",@rptInField1In ," fieldData, transactionInRecordsId from transactiontranslatedin_",inBatchUpoadId,") table2
			on table1.rownumber = table2.transactionInRecordsId
			set translatedReportField1Data = fieldData
			where table1.batchUploadId = ",inBatchUpoadId," and fromOutboundConfig = true;");

			PREPARE stmt from @stmt;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt;
 

 SET @stmt = CONCAT("drop table if exists transactionoutdetailauditerrorsforinbound_",inBatchId,"; ");

 PREPARE stmt from @stmt;
 EXECUTE stmt;
 DEALLOCATE PREPARE stmt; 

 end;
end if;


end proc_main$$

DELIMITER ;



USE `universaltranslatorca`;
DROP procedure IF EXISTS `populateAuditReport`;

DELIMITER $$
USE `universaltranslatorca`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `populateAuditReport`(in inConfigId int, in inBatchId int)
proc_main:begin


SET @stmt = CONCAT('truncate table  transactionindetailauditerrors_',inBatchId);
PREPARE stmt from @stmt;
EXECUTE stmt;

SELECT concat('F',rptField1),concat('F',rptField2),concat('F',rptField3),concat('F',rptField4) INTO @rptField1, @rptField2,@rptField3,@rptField4 
FROM configurationmessagespecs where configId = inConfigId LIMIT 1;

if(@rptField1 = 'F0') then 
	set @rptField1 = "F1";
end if;

if(@rptField2 = 'F0') then 
	set @rptField2 = "F2";
end if;

if(@rptField3 = 'F0') then 
	set @rptField3 = "F3";
end if;

if(@rptField4 = 'F0') then 
	set @rptField4 = "F4";
end if;


SET @stmt = CONCAT('insert into transactionindetailauditerrors_',inBatchId,' 
(required, batchUploadId, configId, transactionInRecordsId, fieldNo, errorId, transactionInErrorId,errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data)
select a.required, a.batchUploadId,a.configId,a.transactionInRecordsId,a.fieldno,a.errorId,a.id,a.fieldValue,b.',@rptField1,',b.',@rptField2,',b.',@rptField3,',b.',@rptField4,'
from transactioninerrors_',inBatchId,' a inner join 
transactioninrecords_',inBatchId,' b on a.transactionInRecordsId = b.id
where a.configId = ',inConfigId);

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


SET @stmt = CONCAT('UPDATE transactionIndetailauditerrors_',inBatchId,' JOIN (select distinct fieldNo matchid, macro_Name as label 
from macro_names, transactioninerrors_',inBatchId,' where macro_Names.id = transactioninerrors_',inBatchId,'.macroId) tbl_concat
     ON transactionIndetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionIndetailauditerrors_',inBatchId,'.errorDetails = tbl_concat.label WHERE errorId = 4');


PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


SET @stmt = CONCAT('UPDATE transactionindetailauditerrors_',inBatchId,'
  JOIN (select distinct fieldNo matchid, name as label 
from crosswalks, transactioninerrors_',inBatchId,' where crosswalks.id = transactioninerrors_',inBatchId,'.cwId) tbl_concat
     ON transactionIndetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionIndetailauditerrors_',inBatchId,'.errorDetails = tbl_concat.label WHERE errorId = 3');


PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @stmt = CONCAT('UPDATE transactionIndetailauditerrors_',inBatchId,'
  JOIN (select distinct fieldNo matchid, validationType as label 
from ref_validationtypes, transactioninerrors_',inBatchId,' where ref_validationtypes.id = transactioninerrors_',inBatchId,'.validationTypeId) tbl_concat
     ON transactionIndetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionIndetailauditerrors_',inBatchId,'.errorDetails = tbl_concat.label WHERE errorId = 2');


PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


SET @stmt = CONCAT('UPDATE transactionIndetailauditerrors_',inBatchId,'
  JOIN (select distinct fieldNo as matchid, fieldDesc as label from configurationformfields where configId = ',inConfigId,') tbl_concat
     ON transactionIndetailauditerrors_',inBatchId,'.fieldNo = tbl_concat.matchid
SET transactionIndetailauditerrors_',inBatchId,'.fieldName = tbl_concat.label');


PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


SET @stmt = CONCAT('insert into transactionindetailauditerrors_',inBatchId,' 
(batchUploadId, configId, transactionInRecordsId, fieldNo, errorId, transactionInErrorId,errorData, required)
select batchUploadId,configId,0,fieldno,errorId,id,stackTrace, required from transactioninerrors_',inBatchId,' 
where errorId = 5 and configId = ',inConfigId);

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


SET @stmt = CONCAT("select group_concat(distinct concat('F', fieldNo)) from transactionindetailauditerrors_",inBatchId," 
where batchUPloadId = ",inBatchId,"  and errorData is null and configId = ",inConfigId," into @fieldNos;
");

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


if (@fieldNos is not null) then

	begin
    
    SET @stmt = CONCAT("
		select distinct group_concat(distinct concat('when fieldNo = ', fieldNo , ' then ', concat('F', fieldNo)) separator ' ' ) from transactionindetailauditerrors_",inBatchId,"
        where batchUPloadId = ",inBatchId," and errorData is null and configId = ",inConfigId," into @updateStmts;
	 ");

		PREPARE stmt from @stmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
    
   if (@updateStmts is not null) then 
    begin
   
	   SET @stmt = CONCAT("
			update transactionindetailauditerrors_",inBatchId," tiae join (
			select id, ", @fieldNos," from transactioninrecords_",inBatchId,") tir
			on tiae.transactionInRecordsId = tir.id
			set errordata = case ",@updateStmts," end
			where batchUPloadId = ",inBatchId,"  and errorData is null  and configId = ",inConfigId," ;
		");
			
            PREPARE stmt from @stmt;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt;
	end;
    end if;

	end;

end if;


SET @stmt = CONCAT('INSERT INTO batchuploadauditerrors (batchuploadId, configId, fieldNo, fieldName, errorId, errorDetails, errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data, rownumber, required) 
select batchUploadId, configId, table1.fieldNo, fieldName, errorId, errorDetails, errorData, reportField1Data, reportField2Data, reportField3Data, reportField4Data, transactionInRecordsId, required 
from transactionIndetailauditerrors_',inBatchId, " table1");


PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


SET @stmt = CONCAT("update batchuploadauditerrors table1 join (
select ",@rptField1," fieldData, transactionInRecordsId from transactiontranslatedin_",inBatchId,") table2
on table1.rownumber = table2.transactionInRecordsId
set translatedReportField1Data = fieldData
where table1.batchUploadId = ",inBatchId,";");

PREPARE stmt from @stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;



end proc_main$$

DELIMITER ;





